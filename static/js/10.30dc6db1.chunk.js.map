{"version":3,"sources":["redux/selectors/filter.js","../../../../src/components/disclosure/disclosure.tsx","redux/actions/reportsActions.js","components/views/Report.js"],"names":["assistantSelect","state","assistant","filterAssistantsSelector","createSelector","allAssistants","assistants","currentFilter","data","filter","name","toLowerCase","includes","filterAssistantSchedulerSelector","allScheduler","scheduler","auth","current","filterAssistantsDaySelector","currentDay","format","Date","startDate","locale","es","replace","c","toUpperCase","filterAssistantSelector","filterAssistantDaysLengthSelector","daysAvailable","length","DisclosureStates","ActionTypes","reducers","disclosureState","match","Closed","linkedPanel","action","buttonId","panelId","DisclosureContext","createContext","useDisclosureContext","component","context","useContext","err","Error","Disclosure","DisclosureAPIContext","useDisclosureAPIContext","DisclosurePanelContext","stateReducer","DEFAULT_DISCLOSURE_TAG","props","defaultOpen","passthroughProps","useId","reducerBag","useReducer","dispatch","useEffect","type","close","useCallback","CloseDisclosure","restoreElement","focusableElement","document","api","useMemo","slot","open","value","State","render","defaultTag","Button","forwardRefWithAs","buttonRef","useSyncRefs","panelContext","isWithinPanel","handleKeyDown","event","Keys","ToggleDisclosure","handleKeyUp","handleClick","isDisabledReactIssue7711","Open","propsWeControl","onKeyDown","onClick","ref","id","onKeyUp","PanelRenderFeatures","Features","Panel","panelRef","LinkPanel","usesOpenClosedState","useOpenClosed","visible","UnlinkPanel","features","fetchReports","a","LOADING_REPORTS","payload","loading","get","then","FETCH_REPORTS","reverse","console","log","Report","useDispatch","useState","skip","setSkip","reports","useSelector","allReports","reportSkip","slice","reportsTotal","fetchSchedulers","className","disabled","map","e","dateCreate","createdAt","day","hour","observacion","schedulerFilter","_id","clase","title","endDate","teacher","school","departament","motivo","addstudents"],"mappings":"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","file":"static/js/10.30dc6db1.chunk.js","sourcesContent":["import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { createSelector } from 'reselect'\r\n\r\nconst assistantSelect = (state) => state.assistant\r\n\r\nexport const filterAssistantsSelector = createSelector(\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allAssistants.currentFilter,\r\n  (assistants, currentFilter) => {\r\n    let data = assistants.filter((assistant) => {\r\n      return assistant.name.toLowerCase().includes(currentFilter.toLowerCase())\r\n    })\r\n\r\n    let assistantMap = {}\r\n    currentFilter === '' ? (assistantMap = assistants) : (assistantMap = data)\r\n\r\n    return assistantMap\r\n  }\r\n)\r\n\r\nexport const filterAssistantSchedulerSelector = createSelector(\r\n  (state) => state.allScheduler.scheduler,\r\n  (state) => state.auth.current,\r\n  (scheduler, current) => {\r\n    let data = scheduler.filter((scheduler) => {\r\n      return scheduler.assistant.includes(current.assistant)\r\n    })\r\n\r\n    return data\r\n  }\r\n)\r\n\r\nexport const filterAssistantsDaySelector = (scheduler) =>\r\n  createSelector(\r\n    (state) => state.allAssistants.currentDay,\r\n    (currentDay) => {\r\n      let data = scheduler.filter((scheduler) => {\r\n        let startDate = format(new Date(scheduler.startDate), 'EEEE', {\r\n          locale: es\r\n        })\r\n\r\n        return startDate\r\n          .replace(/^\\w/, (c) => c.toUpperCase())\r\n          .includes(currentDay)\r\n      })\r\n\r\n      return data\r\n    }\r\n  )\r\n\r\nexport const filterAssistantSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant\r\n)\r\n\r\nexport const filterAssistantDaysLengthSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant.daysAvailable?.length\r\n)\r\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n  MutableRefObject,\n  ContextType,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  disclosureState: DisclosureStates\n\n  linkedPanel: boolean\n\n  buttonId: string\n  panelId: string\n}\n\nenum ActionTypes {\n  ToggleDisclosure,\n  CloseDisclosure,\n\n  SetButtonId,\n  SetPanelId,\n\n  LinkPanel,\n  UnlinkPanel,\n}\n\ntype Actions =\n  | { type: ActionTypes.ToggleDisclosure }\n  | { type: ActionTypes.CloseDisclosure }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n  | { type: ActionTypes.LinkPanel }\n  | { type: ActionTypes.UnlinkPanel }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.ToggleDisclosure]: state => ({\n    ...state,\n    disclosureState: match(state.disclosureState, {\n      [DisclosureStates.Open]: DisclosureStates.Closed,\n      [DisclosureStates.Closed]: DisclosureStates.Open,\n    }),\n  }),\n  [ActionTypes.CloseDisclosure]: state => {\n    if (state.disclosureState === DisclosureStates.Closed) return state\n    return { ...state, disclosureState: DisclosureStates.Closed }\n  },\n  [ActionTypes.LinkPanel](state) {\n    if (state.linkedPanel === true) return state\n    return { ...state, linkedPanel: true }\n  },\n  [ActionTypes.UnlinkPanel](state) {\n    if (state.linkedPanel === false) return state\n    return { ...state, linkedPanel: false }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet DisclosureContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nDisclosureContext.displayName = 'DisclosureContext'\n\nfunction useDisclosureContext(component: string) {\n  let context = useContext(DisclosureContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n  return context\n}\n\nlet DisclosureAPIContext = createContext<{\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n} | null>(null)\nDisclosureAPIContext.displayName = 'DisclosureAPIContext'\n\nfunction useDisclosureAPIContext(component: string) {\n  let context = useContext(DisclosureAPIContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureAPIContext)\n    throw err\n  }\n  return context\n}\n\nlet DisclosurePanelContext = createContext<string | null>(null)\nDisclosurePanelContext.displayName = 'DisclosurePanelContext'\n\nfunction useDisclosurePanelContext() {\n  return useContext(DisclosurePanelContext)\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DISCLOSURE_TAG = Fragment\ninterface DisclosureRenderPropArg {\n  open: boolean\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n}\n\nexport function Disclosure<TTag extends ElementType = typeof DEFAULT_DISCLOSURE_TAG>(\n  props: Props<TTag, DisclosureRenderPropArg> & {\n    defaultOpen?: boolean\n  }\n) {\n  let { defaultOpen = false, ...passthroughProps } = props\n  let buttonId = `headlessui-disclosure-button-${useId()}`\n  let panelId = `headlessui-disclosure-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId,\n    panelId,\n  } as StateDefinition)\n  let [{ disclosureState }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let close = useCallback(\n    (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => {\n      dispatch({ type: ActionTypes.CloseDisclosure })\n\n      let restoreElement = (() => {\n        if (!focusableElement) return document.getElementById(buttonId)\n        if (focusableElement instanceof HTMLElement) return focusableElement\n        if (focusableElement.current instanceof HTMLElement) return focusableElement.current\n\n        return document.getElementById(buttonId)\n      })()\n\n      restoreElement?.focus()\n    },\n    [dispatch, buttonId]\n  )\n\n  let api = useMemo<ContextType<typeof DisclosureAPIContext>>(() => ({ close }), [close])\n\n  let slot = useMemo<DisclosureRenderPropArg>(\n    () => ({ open: disclosureState === DisclosureStates.Open, close }),\n    [disclosureState, close]\n  )\n\n  return (\n    <DisclosureContext.Provider value={reducerBag}>\n      <DisclosureAPIContext.Provider value={api}>\n        <OpenClosedProvider\n          value={match(disclosureState, {\n            [DisclosureStates.Open]: State.Open,\n            [DisclosureStates.Closed]: State.Closed,\n          })}\n        >\n          {render({\n            props: passthroughProps,\n            slot,\n            defaultTag: DEFAULT_DISCLOSURE_TAG,\n            name: 'Disclosure',\n          })}\n        </OpenClosedProvider>\n      </DisclosureAPIContext.Provider>\n    </DisclosureContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(ref)\n\n  let panelContext = useDisclosurePanelContext()\n  let isWithinPanel = panelContext === null ? false : panelContext === state.panelId\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) {\n        if (state.disclosureState === DisclosureStates.Closed) return\n\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ToggleDisclosure })\n            document.getElementById(state.buttonId)?.focus()\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ToggleDisclosure })\n            break\n        }\n      }\n    },\n    [dispatch, isWithinPanel, state.disclosureState]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n\n      if (isWithinPanel) {\n        dispatch({ type: ActionTypes.ToggleDisclosure })\n        document.getElementById(state.buttonId)?.focus()\n      } else {\n        dispatch({ type: ActionTypes.ToggleDisclosure })\n      }\n    },\n    [dispatch, props.disabled, state.buttonId, isWithinPanel]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = isWithinPanel\n    ? { type: 'button', onKeyDown: handleKeyDown, onClick: handleClick }\n    : {\n        ref: buttonRef,\n        id: state.buttonId,\n        type: 'button',\n        'aria-expanded': props.disabled\n          ? undefined\n          : state.disclosureState === DisclosureStates.Open,\n        'aria-controls': state.linkedPanel ? state.panelId : undefined,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onClick: handleClick,\n      }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n  close: (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => void\n}\ntype PanelPropsWeControl = 'id'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Panel.name].join('.'))\n  let { close } = useDisclosureAPIContext([Disclosure.name, Panel.name].join('.'))\n\n  let panelRef = useSyncRefs(ref, () => {\n    if (state.linkedPanel) return\n    dispatch({ type: ActionTypes.LinkPanel })\n  })\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.disclosureState === DisclosureStates.Open\n  })()\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.UnlinkPanel }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.disclosureState === DisclosureStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.UnlinkPanel })\n    }\n  }, [state.disclosureState, props.unmount, dispatch])\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open, close }),\n    [state, close]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n  }\n  let passthroughProps = props\n\n  return (\n    <DisclosurePanelContext.Provider value={state.panelId}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_PANEL_TAG,\n        features: PanelRenderFeatures,\n        visible,\n        name: 'Disclosure.Panel',\n      })}\n    </DisclosurePanelContext.Provider>\n  )\n})\n\n// ---\n\nDisclosure.Button = Button\nDisclosure.Panel = Panel\n","import api from '../../api/assistants'\r\nimport { ActionTypes } from '../constants/action-types'\r\n\r\n// Devuelve todos los assistentes de la api\r\nexport const fetchReports = async (dispatch) => {\r\n  dispatch({\r\n    type: ActionTypes.LOADING_REPORTS,\r\n    payload: { loading: true }\r\n  })\r\n\r\n  try {\r\n    let data = await api.get('report').then(({ data }) => data)\r\n    dispatch({\r\n      type: ActionTypes.FETCH_REPORTS,\r\n      payload: data.reverse()\r\n    })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n","import { Disclosure } from '@headlessui/react'\r\nimport { ChevronUpIcon } from '@heroicons/react/solid'\r\nimport { useEffect, useState } from 'react'\r\nimport { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchReports } from '../../redux/actions/reportsActions'\r\nimport { filterReportSchedulerSelector } from '../../redux/selectors/filter'\r\nimport { fetchSchedulers } from '../../redux/actions/schedulerActions'\r\nimport { LocationMarkerIcon, UserIcon } from '@heroicons/react/outline'\r\n\r\nexport default function Report() {\r\n  const dispatch = useDispatch()\r\n  const [skip, setSkip] = useState(0)\r\n\r\n  const reports = useSelector((state) => state.allReports?.reports)\r\n  const scheduler = useSelector((state) => state.allScheduler?.scheduler)\r\n  let reportSkip = reports.slice(skip, skip + 10)\r\n  let reportsTotal = reports.length\r\n\r\n  const motivo = ['Registro de Alumnos', 'Suspención de Clases']\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchReports)\r\n    dispatch(fetchSchedulers)\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className='flex flex-col p-10 gap-5 h-screen w-full bg-white '>\r\n      <div className='flex flex-row items-baseline w-full pl-5 pr-5 gap-3'>\r\n        <h1 className='text-2xl text-gray-700 font-semibold'>REPORTES</h1>\r\n        <h1 className='align-text-bottom text-sm text-gray-400 font-normal'>\r\n          {skip + reportSkip.length} / {reportsTotal} Total\r\n        </h1>\r\n        {skip === 0 ? (\r\n          <button\r\n            disabled='true'\r\n            className='text-xs text-white bg-blue-600 rounded-md p-1 opacity-50'\r\n            onClick={() => setSkip(skip - 10)}\r\n          >\r\n            Atras\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className='text-xs text-white bg-blue-600 rounded-md p-1'\r\n            onClick={() => setSkip(skip - 10)}\r\n          >\r\n            Atras\r\n          </button>\r\n        )}\r\n\r\n        {skip + reportSkip.length === reportsTotal ? (\r\n          <button\r\n            disabled\r\n            className='text-xs text-white bg-blue-600 rounded-md p-1 opacity-50'\r\n            onClick={() => setSkip(skip + 10)}\r\n          >\r\n            Siguiente\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className='text-xs text-white bg-blue-600 rounded-md p-1'\r\n            onClick={() => setSkip(skip + 10)}\r\n          >\r\n            Siguiente\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className='grid grid-cols-5 justify-items-center w-full pl-5 pr-5 text-xs font-medium  text-gray-600 opacity-50'>\r\n        <h2>NOMBRE AYUDANTE</h2>\r\n        <h2>MOTIVO</h2>\r\n        <h2>CLASE</h2>\r\n        <h2>FECHA</h2>\r\n\r\n        <span className='h-4 w-4' />\r\n      </div>\r\n\r\n      <div className='flex flex-col gap-3 w-full overflow-auto'>\r\n        {reportSkip.map((e) => {\r\n          const dateCreate = format(new Date(e.createdAt), 'dd/MM/yyyy HH:mm')\r\n          const day = format(new Date(e.createdAt), 'dd MMM, yyyy', {\r\n            locale: es\r\n          })\r\n          const hour = format(new Date(e.createdAt), 'HH:mm')\r\n          const observacion = e.observacion || 'Sin Observaciones'\r\n          let schedulerFilter = scheduler\r\n            .filter((scheduler) => scheduler._id.includes(e.clase))\r\n            .map((e) => {\r\n              const t = {\r\n                title: e.title,\r\n                startDate: format(new Date(e.startDate), 'HH:mm'),\r\n                endDate: format(new Date(e.endDate), 'HH:mm'),\r\n                teacher: e.teacher,\r\n                school: e.school,\r\n                departament: e.departament\r\n              }\r\n\r\n              return t\r\n            })\r\n\r\n          const title = schedulerFilter[0]?.title\r\n          const startDate = schedulerFilter[0]?.startDate\r\n          const endDate = schedulerFilter[0]?.endDate\r\n          const teacher = schedulerFilter[0]?.teacher\r\n          const school = schedulerFilter[0]?.school\r\n          const departament = schedulerFilter[0]?.departament\r\n\r\n          return (\r\n            <div className='w-full bg-white rounded-2xl shadow-md border border-gray-300 hover:bg-gray-100 transition duration-500 ease-in-out'>\r\n              <Disclosure>\r\n                {({ open }) => (\r\n                  <>\r\n                    <Disclosure.Button className='grid grid-cols-5 justify-items-center text-gray-600 w-full p-5 text-xs font-medium'>\r\n                      <h2>{e.name}</h2>\r\n                      <h2>{e.motivo}</h2>\r\n                      <h2>\r\n                        {title} {startDate} - {endDate}\r\n                      </h2>\r\n                      <h2>{dateCreate}</h2>\r\n                      {day ===\r\n                        format(new Date(), 'dd MMM, yyyy', {\r\n                          locale: es\r\n                        }) && (\r\n                        <h2 className='absolute text-white right-0 mr-24 bg-yellow-500 rounded-md p-1'>\r\n                          Nuevo\r\n                        </h2>\r\n                      )}\r\n\r\n                      <ChevronUpIcon\r\n                        className={`${\r\n                          open ? 'transform rotate-180' : ''\r\n                        } w-5 h-5 text-blue-700`}\r\n                      />\r\n                    </Disclosure.Button>\r\n\r\n                    <Disclosure.Panel className=' text-gray-500 pl-5 pr-5'>\r\n                      <div className='flex flex-row justify-between items-start border-t border-gray-200 p-5'>\r\n                        <div className='flex flex-col'>\r\n                          <h1 className='font-semibold text-base text-gray-800'>\r\n                            Detalle de la clase:\r\n                          </h1>\r\n                          <div className='flex flex-col mt-2'>\r\n                            <div className='flex flex-row text-xs font-medium text-gray-500'>\r\n                              {startDate} - {endDate}\r\n                            </div>\r\n                            <h2 className='text-sm font-medium text-gray-700'>\r\n                              {school}\r\n                            </h2>\r\n                            <h2 className='text-xs font-medium text-gray-500'>\r\n                              {departament}\r\n                            </h2>\r\n                          </div>\r\n\r\n                          <div className='flex flex-col mt-2'>\r\n                            <div className='flex flex-row items-center gap-2'>\r\n                              <LocationMarkerIcon className='h-3 w-3 text-gray-500' />\r\n                              <h1 className='text-xs font-medium text-gray-500'>\r\n                                {title}\r\n                              </h1>\r\n                            </div>\r\n                            <div className='flex flex-row items-center gap-2'>\r\n                              <UserIcon className='h-3 w-3 text-gray-500' />\r\n                              <h1 className='text-xs font-medium text-gray-500'>\r\n                                {teacher}\r\n                              </h1>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='flex flex-col'>\r\n                          <h1 className='font-semibold text-base text-gray-800'>\r\n                            Detalle del reporte:\r\n                          </h1>\r\n                          <div className='flex flex-col mt-2'>\r\n                            <div className='flex flex-row items-center gap-2'>\r\n                              <h2 className='text-xs font-medium'>Dia:</h2>\r\n                              <h2 className='text-xs font-medium'>{day}</h2>\r\n                            </div>\r\n                            <div className='flex flex-row items-center gap-2'>\r\n                              <h2 className='text-xs font-medium'>Hora:</h2>\r\n                              <h2 className='text-xs font-medium'>{hour}</h2>\r\n                            </div>\r\n                            <div className='flex flex-row items-center gap-2'>\r\n                              <h2 className='text-xs font-medium'>Ayudante:</h2>\r\n                              <h2 className='text-xs font-medium '>{e.name}</h2>\r\n                            </div>\r\n                            <div className='flex flex-row items-center gap-2 mt-2'>\r\n                              <h2 className='text-xs font-medium text-gray-700'>\r\n                                Alumnos Presenciales:\r\n                              </h2>\r\n                              <h2 className='text-xs font-medium text-gray-700'>\r\n                                {e.addstudents}\r\n                              </h2>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className='flex flex-col'>\r\n                          <h1 className='font-semibold text-base text-gray-800'>\r\n                            Observaciones:\r\n                          </h1>\r\n                          <div className='flex flex-col mt-2'>\r\n                            <p className='font-medium text-xs'>{observacion}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Disclosure.Panel>\r\n                  </>\r\n                )}\r\n              </Disclosure>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}