{"version":3,"sources":["../../../src/hooks/use-iso-morphic-effect.ts","../../../src/utils/render.ts","../../../src/utils/match.ts","../../../src/hooks/use-server-handoff-complete.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../src/hooks/use-id.ts","../node_modules/@heroicons/react/outline/esm/LocationMarkerIcon.js","../node_modules/@heroicons/react/outline/esm/PlusIcon.js","../node_modules/@heroicons/react/outline/esm/RefreshIcon.js","../node_modules/@heroicons/react/outline/esm/TrashIcon.js","../node_modules/@heroicons/react/outline/esm/UserIcon.js","../node_modules/@heroicons/react/outline/esm/ViewBoardsIcon.js","../node_modules/@heroicons/react/outline/esm/ViewGridIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../src/hooks/use-is-mounted.ts","../../../src/internal/open-closed.tsx","../../../src/components/keyboard.ts","../../../src/hooks/use-sync-refs.ts","../../../src/utils/bugs.ts","../../../src/hooks/use-window-event.ts","../../../src/utils/focus-management.ts","../../../src/hooks/use-focus-trap.ts","../../../src/hooks/use-inert-others.ts","../../../src/internal/portal-force-root.tsx","../../../../src/components/portal/portal.tsx","../../../../src/components/description/description.tsx","../../../src/internal/stack-context.tsx","../../../../src/components/dialog/dialog.tsx","../../../../src/components/transitions/utils/transition.ts","../../../src/hooks/use-is-initial-render.ts","../../../src/utils/disposables.ts","../../../src/utils/once.ts","../../../../src/components/transitions/transition.tsx"],"names":["useIsoMorphicEffect","window","useEffect","Features","RenderStrategy","render","props","slot","defaultTag","features","visible","name","_render","featureFlags","isStatic","rest","unmount","strategy","match","hidden","style","display","omit","as","Component","tag","children","refName","passThroughProps","refRelatedProps","resolvedChildren","Object","isValidElement","Array","Error","line","cloneElement","clone","func","existingProps","event","mergeEventFunctions","compact","createElement","forwardRefWithAs","component","forwardRef","displayName","keysToOmit","key","value","lookup","returnValue","args","error","state","serverHandoffComplete","useServerHandoffComplete","useState","setServerHandoffComplete","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","prototype","id","generateId","useId","ready","setId","LocationMarkerIcon","React","assign","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","PlusIcon","RefreshIcon","TrashIcon","UserIcon","ViewBoardsIcon","ViewGridIcon","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create","useIsMounted","mounted","useRef","State","Context","createContext","useOpenClosed","useContext","OpenClosedProvider","Keys","useSyncRefs","refs","cache","useCallback","ref","isDisabledReactIssue7711","element","parent","legend","isParentDisabled","previous","isFirstLegend","useWindowEvent","type","listener","options","listenerRef","Focus","FocusResult","FocusableMode","focusableSelector","selector","focusElement","preventScroll","focusIn","container","focus","elements","document","body","getFocusableElements","active","direction","Direction","startIndex","Math","focusOptions","offset","total","next","nextIdx","useFocusTrap","All","initialFocus","containers","restoreElement","previousActiveElement","featuresRestoreFocus","Boolean","featuresInitialFocus","activeElement","allContainers","Set","toElement","contains","interactables","originals","inert","restore","original","ForcePortalRootContext","ForcePortalRoot","force","usePortalTarget","forceInRoot","groupTarget","existingRoot","root","setTarget","DEFAULT_PORTAL_TAG","Portal","passthroughProps","createPortal","DEFAULT_GROUP_TAG","PortalGroupContext","DescriptionContext","useDescriptionContext","context","err","StackMessage","StackContext","StackProvider","onUpdate","parentUpdate","notify","DialogStates","ActionTypes","reducers","action","titleId","DialogContext","useDialogContext","Dialog","stateReducer","DialogRenderFeatures","DialogRoot","open","onClose","nestedDialogCount","setNestedDialogCount","usesOpenClosedState","internalDialogRef","dialogRef","hasOpen","hasOnClose","dialogState","useReducer","descriptionId","dispatch","close","setTitleId","enabled","hasNestedDialogs","hasParentDialog","position","FocusTrapFeatures","leaf","child","interactable","useInertOthers","overflow","paddingRight","scrollbarWidth","observer","IntersectionObserver","entries","entry","descriptionIds","setDescriptionIds","useMemo","register","existing","idx","contextBag","useDescriptions","describedby","DescriptionProvider","Open","propsWeControl","role","onClick","onKeyDown","message","count","Overlay","overlayRef","handleClick","Title","Description","Reason","useIsInitialRender","initial","disposables","api","requestAnimationFrame","raf","cancelAnimationFrame","nextFrame","setTimeout","timer","clearTimeout","add","dispose","addClasses","node","classes","removeClasses","transition","base","from","to","entered","done","_done","cb","called","once","getComputedStyle","transitionDuration","transitionDelay","map","v","parseFloat","z","resolvedValue","durationMs","delaysMs","waitForTransition","reason","useSplitClasses","className","TransitionContext","TreeStates","NestingContext","hasChildren","bag","useNesting","doneRef","transitionableChildren","unregister","Hidden","Visible","childId","noop","eventNames","ensureEventHooksExist","events","TransitionChildRenderFeatures","TransitionChild","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","setState","useTransitionContext","show","appear","useParentNesting","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","eventsRef","useEvents","skip","Transition","includes","nestingBag","transitionBag","sharedProps","hasTransitionContext","hasOpenClosedContext"],"mappings":"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","file":"static/js/6.140501a0.chunk.js","sourcesContent":["import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import { useState, useEffect } from 'react'\n\nlet state = { serverHandoffComplete: false }\n\nexport function useServerHandoffComplete() {\n  let [serverHandoffComplete, setServerHandoffComplete] = useState(state.serverHandoffComplete)\n\n  useEffect(() => {\n    if (serverHandoffComplete === true) return\n\n    setServerHandoffComplete(true)\n  }, [serverHandoffComplete])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return serverHandoffComplete\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n","import * as React from \"react\";\n\nfunction LocationMarkerIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\n  }));\n}\n\nexport default LocationMarkerIcon;","import * as React from \"react\";\n\nfunction PlusIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M12 4v16m8-8H4\"\n  }));\n}\n\nexport default PlusIcon;","import * as React from \"react\";\n\nfunction RefreshIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n  }));\n}\n\nexport default RefreshIcon;","import * as React from \"react\";\n\nfunction TrashIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n  }));\n}\n\nexport default TrashIcon;","import * as React from \"react\";\n\nfunction UserIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n  }));\n}\n\nexport default UserIcon;","import * as React from \"react\";\n\nfunction ViewBoardsIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2\"\n  }));\n}\n\nexport default ViewBoardsIcon;","import * as React from \"react\";\n\nfunction ViewGridIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n  }));\n}\n\nexport default ViewGridIcon;","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(false)\n\n  useEffect(() => {\n    mounted.current = true\n\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n  ReactElement,\n} from 'react'\n\nlet Context = createContext<State | null>(null)\nContext.displayName = 'OpenClosedContext'\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function useOpenClosed() {\n  return useContext(Context)\n}\n\ninterface Props {\n  value: State\n  children: ReactNode\n}\n\nexport function OpenClosedProvider({ value, children }: Props): ReactElement {\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n","// TODO: This must already exist somewhere, right? 🤔\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","import { useRef, useEffect, useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType> | ((instance: TType) => void) | null)[]\n) {\n  let cache = useRef(refs)\n\n  useEffect(() => {\n    cache.current = refs\n  }, [refs])\n\n  return useCallback(\n    (value: TType) => {\n      for (let ref of cache.current) {\n        if (ref == null) continue\n        if (typeof ref === 'function') ref(value)\n        else ref.current = value\n      }\n    },\n    [cache]\n  )\n}\n","// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let listenerRef = useRef(listener)\n  listenerRef.current = listener\n\n  useEffect(() => {\n    function handler(event: WindowEventMap[TType]) {\n      listenerRef.current.call(window, event)\n    }\n\n    window.addEventListener(type, handler, options)\n    return () => window.removeEventListener(type, handler, options)\n  }, [type, options])\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  /** Something went wrong while trying to focus. */\n  Error,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N+1` where `N` is the last index in the array, then we overflow. */\n  Overflow,\n\n  /** Focus was successful. */\n  Success,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N-1` where `N` is the first index in the array, then we underflow. */\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import {\n  useRef,\n  // Types\n  MutableRefObject,\n  useEffect,\n} from 'react'\n\nimport { Keys } from '../components/keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from './use-window-event'\nimport { useIsMounted } from './use-is-mounted'\n\nexport enum Features {\n  /** No features enabled for the `useFocusTrap` hook. */\n  None = 1 << 0,\n\n  /** Ensure that we move focus initially into the container. */\n  InitialFocus = 1 << 1,\n\n  /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n  TabLock = 1 << 2,\n\n  /** Ensure that programmatically moving focus outside of the container is disallowed. */\n  FocusLock = 1 << 3,\n\n  /** Ensure that we restore the focus when unmounting the component that uses this `useFocusTrap` hook. */\n  RestoreFocus = 1 << 4,\n\n  /** Enable all features. */\n  All = InitialFocus | TabLock | FocusLock | RestoreFocus,\n}\n\nexport function useFocusTrap(\n  container: MutableRefObject<HTMLElement | null>,\n  features: Features = Features.All,\n  {\n    initialFocus,\n    containers,\n  }: {\n    initialFocus?: MutableRefObject<HTMLElement | null>\n    containers?: MutableRefObject<Set<MutableRefObject<HTMLElement | null>>>\n  } = {}\n) {\n  let restoreElement = useRef<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = useRef<HTMLElement | null>(null)\n  let mounted = useIsMounted()\n\n  let featuresRestoreFocus = Boolean(features & Features.RestoreFocus)\n  let featuresInitialFocus = Boolean(features & Features.InitialFocus)\n\n  // Capture the currently focused element, before we enable the focus trap.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    restoreElement.current = document.activeElement as HTMLElement\n  }, [featuresRestoreFocus])\n\n  // Restore the focus when we unmount the component.\n  useEffect(() => {\n    if (!featuresRestoreFocus) return\n\n    return () => {\n      focusElement(restoreElement.current)\n      restoreElement.current = null\n    }\n  }, [featuresRestoreFocus])\n\n  // Handle initial focus\n  useEffect(() => {\n    if (!featuresInitialFocus) return\n    if (!container.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus?.current) {\n      if (initialFocus?.current === activeElement) {\n        previousActiveElement.current = activeElement\n        return // Initial focus ref is already the active element\n      }\n    } else if (container.current.contains(activeElement)) {\n      previousActiveElement.current = activeElement\n      return // Already focused within Dialog\n    }\n\n    // Try to focus the initialFocus ref\n    if (initialFocus?.current) {\n      focusElement(initialFocus.current)\n    } else {\n      if (focusIn(container.current, Focus.First) === FocusResult.Error) {\n        throw new Error('There are no focusable elements inside the <FocusTrap />')\n      }\n    }\n\n    previousActiveElement.current = document.activeElement as HTMLElement\n  }, [container, initialFocus, featuresInitialFocus])\n\n  // Handle `Tab` & `Shift+Tab` keyboard events\n  useWindowEvent('keydown', event => {\n    if (!(features & Features.TabLock)) return\n\n    if (!container.current) return\n    if (event.key !== Keys.Tab) return\n\n    event.preventDefault()\n\n    if (\n      focusIn(\n        container.current,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      ) === FocusResult.Success\n    ) {\n      previousActiveElement.current = document.activeElement as HTMLElement\n    }\n  })\n\n  // Prevent programmatically escaping the container\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!(features & Features.FocusLock)) return\n\n      let allContainers = new Set(containers?.current)\n      allContainers.add(container)\n\n      if (!allContainers.size) return\n\n      let previous = previousActiveElement.current\n      if (!previous) return\n      if (!mounted.current) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(allContainers, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.current = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.current)\n      }\n    },\n    true\n  )\n}\n\nfunction contains(containers: Set<MutableRefObject<HTMLElement | null>>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.current?.contains(element)) return true\n  }\n\n  return false\n}\n","import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n","import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  let ready = useServerHandoffComplete()\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  if (!ready) return null\n\n  return !target || !element\n    ? null\n    : createPortal(\n        render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: 'Portal' }),\n        element\n      )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n\n  // Types\n  MutableRefObject,\n  ReactNode,\n} from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (\n  message: StackMessage,\n  type: string,\n  element: MutableRefObject<HTMLElement | null>\n) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n  type,\n  element,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n  type: string\n  element: MutableRefObject<HTMLElement | null>\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  useIsoMorphicEffect(() => {\n    notify(StackMessage.Add, type, element)\n    return () => notify(StackMessage.Remove, type, element)\n  }, [notify, type, element])\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MutableRefObject,\n  Ref,\n  useState,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open?: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n  let [nestedDialogCount, setNestedDialogCount] = useState(0)\n\n  let usesOpenClosedState = useOpenClosed()\n  if (open === undefined && usesOpenClosedState !== null) {\n    // Update the `open` prop based on the open closed state\n    open = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  let containers = useRef<Set<MutableRefObject<HTMLElement | null>>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open') || usesOpenClosedState !== null\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return dialogState === DialogStates.Open\n  })()\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  let ready = useServerHandoffComplete()\n  let enabled = ready && dialogState === DialogStates.Open\n  let hasNestedDialogs = nestedDialogCount > 1 // 1 is the current dialog\n  let hasParentDialog = useContext(DialogContext) !== null\n\n  // If there are multiple dialogs, then you can be the root, the leaf or one\n  // in between. We only care abou whether you are the top most one or not.\n  let position = !hasNestedDialogs ? 'leaf' : 'parent'\n\n  useFocusTrap(\n    internalDialogRef,\n    enabled\n      ? match(position, {\n          parent: FocusTrapFeatures.RestoreFocus,\n          leaf: FocusTrapFeatures.All,\n        })\n      : FocusTrapFeatures.None,\n    { initialFocus, containers }\n  )\n  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false)\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    if (internalDialogRef.current?.contains(target)) return\n\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (hasParentDialog) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState, hasParentDialog])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n\n    // Handle `Escape` to close\n    onKeyDown(event: ReactKeyboardEvent) {\n      if (event.key !== Keys.Escape) return\n      if (dialogState !== DialogStates.Open) return\n      if (hasNestedDialogs) return\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      type=\"Dialog\"\n      element={internalDialogRef}\n      onUpdate={useCallback((message, type, element) => {\n        if (type !== 'Dialog') return\n\n        match(message, {\n          [StackMessage.Add]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count + 1)\n          },\n          [StackMessage.Remove]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count - 1)\n          },\n        })\n      }, [])}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falsy we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  entered?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    entered,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let initial = useIsInitialRender()\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let enteredClasses = useSplitClasses(entered)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  let ready = useServerHandoffComplete()\n\n  useEffect(() => {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state, ready])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      <OpenClosedProvider\n        value={match(state, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })}\n      >\n        {render({\n          props: { ...passthroughProps, ...propsWeControl },\n          defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition.Child',\n        })}\n      </OpenClosedProvider>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show?: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  let usesOpenClosedState = useOpenClosed()\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    show = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  if (![true, false].includes((show as unknown) as boolean)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show: show as boolean, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = function Child<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let hasTransitionContext = useContext(TransitionContext) !== null\n  let hasOpenClosedContext = useOpenClosed() !== null\n\n  return !hasTransitionContext && hasOpenClosedContext ? (\n    <Transition {...props} />\n  ) : (\n    <TransitionChild {...props} />\n  )\n}\nTransition.Root = Transition\n"],"sourceRoot":""}