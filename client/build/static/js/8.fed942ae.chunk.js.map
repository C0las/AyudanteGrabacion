{"version":3,"sources":["components/common/AppointmentContent.js","components/admin/scheduler/Index.js"],"names":["AppointmentContent","data","formatDate","restProps","className","school","departament","startDate","hour","minute","endDate","title","SchedulerContainer","dispatch","useDispatch","useSelector","state","allScheduler","scheduler","currentDate","DEPARTMENT","resources","fieldName","instances","id","text","color","locale","firstDayOfWeek","height","onCurrentDateChange","setCurrentDate","defaultCurrentViewName","displayName","startDayHour","endDayHour","excludedDays","appointmentContentComponent","showCloseButton","shadePreviousCells","flexibleSpaceComponent","FlexibleSpace"],"mappings":"uKA+CeA,IA3CY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAeC,EAAgB,iBACjE,OACE,cAAC,IAAaH,mBAAd,2BACMG,GADN,IAEED,WAAYA,EACZD,KAAMA,EAHR,SAKE,sBAAKG,UAAU,8BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,+BAAf,cAAgDH,EAAKI,UACrD,qBAAKD,UAAU,iCACf,qBAAKA,UAAU,wCAAf,SACGH,EAAKK,iBAIV,gCACE,sBAAKF,UAAU,0BAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACrB,8BACGF,EAAWD,EAAKM,UAAW,CAC1BC,KAAM,UACNC,OAAQ,cAGZ,qCACA,8BACGP,EAAWD,EAAKS,QAAS,CACxBF,KAAM,UACNC,OAAQ,iBAId,sBAAKL,UAAU,qCAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,YAC9B,+BAAOH,EAAKU,sB,uGC0ITC,UA/Jf,WACE,IAAMC,EAAWC,cACXb,EAAOc,aAAY,SAACC,GAAD,uBAAWA,EAAMC,oBAAjB,aAAW,EAAoBC,aAClDC,EAAcJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaE,eAoExDC,EAAa,CACjB,uBACA,eACA,SACA,6BACA,eAGIC,EAAY,CAChB,CACEC,UAAW,cACXX,MAAO,aACPY,UAAW,CACT,CAAEC,GAAIJ,EAAW,GAAIK,KAAML,EAAW,GAAIM,MAAO,WACjD,CAAEF,GAAIJ,EAAW,GAAIK,KAAML,EAAW,GAAIM,MAAO,WACjD,CAAEF,GAAIJ,EAAW,GAAIK,KAAML,EAAW,GAAIM,MAAO,WACjD,CAAEF,GAAIJ,EAAW,GAAIK,KAAML,EAAW,GAAIM,MAAO,WACjD,CAAEF,GAAIJ,EAAW,GAAIK,KAAML,EAAW,GAAIM,MAAO,cAKvD,OACE,eAAC,IAAD,CAAWzB,KAAMA,EAAM0B,OAAO,QAAQC,eAAgB,EAAGC,OAAQ,IAAjE,UACE,cAAC,IAAD,CACEV,YAAaA,EACbW,oBAAqB,SAACX,GAAD,OACnBN,EAASkB,YAAeZ,KAE1Ba,uBAAuB,SAGzB,cAAC,IAAD,CACEC,YAAY,OACZC,aAAc,EACdC,WAAY,GACZC,aAAc,CAAC,EAAG,KAEpB,cAAC,IAAD,CACEH,YAAY,UACZC,aAAc,EACdC,WAAY,GACZC,aAAc,CAAC,EAAG,KAGpB,cAAC,IAAD,CAAcC,4BAA6BrC,MAC3C,cAAC,IAAD,CAAoBsC,iBAAe,IACnC,cAAC,IAAD,IACA,cAAC,IAAD,CAAsBC,oBAAoB,IAC1C,cAAC,IAAD,CAAWtC,KAAMoB,IACjB,cAAC,IAAD,CAASmB,uBA3DS,SAAC,GAAD,IAAMrC,EAAN,2BACpB,cAAC,IAAQsC,cAAT,2BACMtC,GADN,IAEEC,UAAU,+DAyDV,cAAC,IAAD,IACA,cAAC,IAAD","file":"static/js/8.fed942ae.chunk.js","sourcesContent":["import { LocationMarkerIcon, ClockIcon } from '@heroicons/react/solid'\r\n\r\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui'\r\n\r\nconst AppointmentContent = ({ data, formatDate, ...restProps }) => {\r\n  return (\r\n    <Appointments.AppointmentContent\r\n      {...restProps}\r\n      formatDate={formatDate}\r\n      data={data}\r\n    >\r\n      <div className='flex flex-col gap-4 w-full '>\r\n        <div className='flex flex-col'>\r\n          <div className='text-sm text-white font-bold'> {data.school}</div>\r\n          <div className='bg-white w-14 h-2 rounded-lg'></div>\r\n          <div className='text-white text-xs font-semibold mt-3'>\r\n            {data.departament}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className='flex items-center gap-2'>\r\n            <ClockIcon className='w-5 h-5' />\r\n            <div>\r\n              {formatDate(data.startDate, {\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n              })}\r\n            </div>\r\n            <span>-</span>\r\n            <div>\r\n              {formatDate(data.endDate, {\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className='flex text-white items-center gap-2'>\r\n            <LocationMarkerIcon className='w-5 h-5' />\r\n            <span>{data.title}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  )\r\n}\r\n\r\nexport default AppointmentContent\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { ViewState } from '@devexpress/dx-react-scheduler'\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  Appointments,\r\n  DayView,\r\n  ViewSwitcher,\r\n  Resources,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  CurrentTimeIndicator\r\n} from '@devexpress/dx-react-scheduler-material-ui'\r\nimport AppointmentContent from '../../common/AppointmentContent'\r\nimport { setCurrentDate } from '../../../redux/actions/schedulerActions'\r\n\r\nfunction SchedulerContainer() {\r\n  const dispatch = useDispatch()\r\n  const data = useSelector((state) => state.allScheduler?.scheduler)\r\n  const currentDate = useSelector((state) => state.allScheduler.currentDate)\r\n  //const datee = useSelector(hourWork1)\r\n\r\n  /*const test = () => {\r\n    const hour = datee.map((e) => e.hour)\r\n    const minute = datee.map((e) => e.minute)\r\n\r\n    let horas = hour.reduce((a, b) => a + b, 0)\r\n    let minutos = minute.reduce((a, b) => a + b, 0)\r\n\r\n    if (minutos >= 60) {\r\n      // Divide minutes by 60 and add result to hours\r\n      horas += Math.floor(minutos / 60)\r\n      // Add remainder of totalM / 60 to minutes\r\n      minutos = minutos % 60\r\n    }\r\n\r\n    return horas + 'h' + minutos\r\n  }*/\r\n\r\n  /*const handleButtonClick = (schoolName, schools) => {\r\n    if (schools.indexOf(schoolName) > -1) {\r\n      return schools.filter((school) => school !== schoolName)\r\n    }\r\n    const nextSchools = [...schools]\r\n    nextSchools.push(schoolName)\r\n    return nextSchools\r\n  }*/\r\n\r\n  /*const LocationSelector = (props) => (\r\n    <div className='flex items-center gap-2'>\r\n      {props.schools.map((school) => {\r\n        console.log(school)\r\n        return (\r\n          <>\r\n            <input\r\n              type='checkbox'\r\n              name={school}\r\n              id={school}\r\n              defaultChecked={true}\r\n              onClick={() => {\r\n                dispatch(handleButtonClick(school, schools))\r\n              }}\r\n              key={school}\r\n              className=''\r\n            />\r\n            <label\r\n              for={school}\r\n              className='\r\n              inline-block text-center w-24 text-sm bg-gray-100 rounded cursor-pointer select-none'\r\n            >\r\n              {school}\r\n            </label>\r\n          </>\r\n        )\r\n      })}\r\n    </div>\r\n  )*/\r\n\r\n  const FlexibleSpace = ({ ...restProps }) => (\r\n    <Toolbar.FlexibleSpace\r\n      {...restProps}\r\n      className='flex flex-row items-center justify-center m-auto gap-2'\r\n    >\r\n      {/*<LocationSelector schools={schools} />*/}\r\n    </Toolbar.FlexibleSpace>\r\n  )\r\n\r\n  const DEPARTMENT = [\r\n    'Preparador Físico',\r\n    'Actuación',\r\n    'Sonido',\r\n    'Redes y Telecomunicaciones',\r\n    'Audiovisual'\r\n  ]\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: 'departament',\r\n      title: 'Department',\r\n      instances: [\r\n        { id: DEPARTMENT[0], text: DEPARTMENT[0], color: '#36A5C4' },\r\n        { id: DEPARTMENT[1], text: DEPARTMENT[1], color: '#BF0249' },\r\n        { id: DEPARTMENT[2], text: DEPARTMENT[2], color: '#F78B30' },\r\n        { id: DEPARTMENT[3], text: DEPARTMENT[3], color: '#939393' },\r\n        { id: DEPARTMENT[4], text: DEPARTMENT[4], color: '#132CAA' }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Scheduler data={data} locale='es-Cl' firstDayOfWeek={1} height={540}>\r\n      <ViewState\r\n        currentDate={currentDate}\r\n        onCurrentDateChange={(currentDate) =>\r\n          dispatch(setCurrentDate(currentDate))\r\n        }\r\n        defaultCurrentViewName='Week'\r\n      />\r\n\r\n      <DayView\r\n        displayName='Dias'\r\n        startDayHour={8}\r\n        endDayHour={21}\r\n        excludedDays={[0, 6]}\r\n      />\r\n      <WeekView\r\n        displayName='Semanas'\r\n        startDayHour={8}\r\n        endDayHour={21}\r\n        excludedDays={[0, 6]}\r\n      />\r\n\r\n      <Appointments appointmentContentComponent={AppointmentContent} />\r\n      <AppointmentTooltip showCloseButton />\r\n      <AppointmentForm />\r\n      <CurrentTimeIndicator shadePreviousCells={false} />\r\n      <Resources data={resources} />\r\n      <Toolbar flexibleSpaceComponent={FlexibleSpace} />\r\n      <DateNavigator />\r\n      <ViewSwitcher />\r\n    </Scheduler>\r\n  )\r\n}\r\n\r\n/*\r\nconst mapStateToProps = (state) => {\r\n  // Recupera los elementos (Escuelas) a filtrar\r\n  let data = state.allScheduler.data.filter(\r\n    (dataItem) => state.allScheduler.schools.indexOf(dataItem.school) > -1\r\n  )\r\n  // Se captura la cadena del campo de entrada\r\n  const lowerCaseFilter = state.allScheduler.currentFilter.toLowerCase()\r\n  // Filtra los elementos del campo title y school\r\n  data = data.filter(\r\n    (dataItem) =>\r\n      dataItem.title.toLowerCase().includes(lowerCaseFilter) ||\r\n      dataItem.department.toLowerCase().includes(lowerCaseFilter)\r\n  )\r\n  return { ...state.allScheduler, data }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCurrentDateChange: (currentDate) =>\r\n    dispatch(createSchedulerAction('currentDate', currentDate)),\r\n  onCurrentViewNameChange: (currentViewName) =>\r\n    dispatch(createSchedulerAction('currentViewName', currentViewName)),\r\n  onSchoolsChange: (schools) =>\r\n    dispatch(createSchedulerAction('schools', schools))\r\n})\r\n\r\nconst ReduxLocationSelector = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LocationSelector)\r\n*/\r\nexport default SchedulerContainer\r\n"],"sourceRoot":""}