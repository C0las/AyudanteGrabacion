{"version":3,"sources":["redux/selectors/filter.js","components/views/assistente/PaymentDetails.js"],"names":["assistantSelect","state","assistant","filterAssistants","createSelector","allAssistants","assistants","currentFilter","data","filter","name","toLowerCase","includes","selectDay","dataDay","daysAvailable","map","avai","day","e","lastName","rut","filterSchedulerSelector","allScheduler","scheduler","assistantsFilt","title","departament","school","teacher","startDate","endDate","confirmationTurn","a","_id","filterAssistantSchedulerSelector","auth","current","filterAssistantsDaySelector","currentDay","format","Date","locale","es","replace","c","toUpperCase","filterAssistantSelector","filterAssistantDaysLengthSelector","length","PaymentDetails","props","dispatch","useDispatch","history","useHistory","id","match","params","useSelector","email","fono","address","paymentDetails","assistantRequest","useState","accountNumber","accountType","bankName","payment","setPayment","street","city","commune","adres","SetAddress","update","preventDefault","list","listA","assistantUpdateRequest","swal","text","icon","button","timer","push","handleChange","target","value","useEffect","fetchSelectedAssistant","asyncFetch","className","onSubmit","defaultValue","placeholder","onChange","type"],"mappings":"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","file":"static/js/12.ac1c3a4a.chunk.js","sourcesContent":["import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { createSelector } from 'reselect'\r\n\r\nconst assistantSelect = (state) => state.assistant\r\n\r\nexport const filterAssistantsSelector = createSelector(\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allAssistants.currentFilter,\r\n  (assistants, currentFilter) => {\r\n    let data = assistants.filter((assistant) => {\r\n      return assistant?.name.toLowerCase().includes(currentFilter.toLowerCase())\r\n    })\r\n\r\n    let assistantMap = {}\r\n    currentFilter === '' ? (assistantMap = assistants) : (assistantMap = data)\r\n\r\n    return assistantMap\r\n  }\r\n)\r\n\r\nexport const filterAssistants = createSelector(\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allAssistants.selectDay,\r\n  (state) => state.allAssistants.currentFilter,\r\n  (assistants, selectDay, currentFilter) => {\r\n    let dataDay = assistants.filter((assistant) => {\r\n      return assistant.daysAvailable\r\n        .map((avai) => avai.day[0]?.toLowerCase())\r\n        .includes(selectDay.toLowerCase())\r\n    })\r\n\r\n    let data = assistants.filter(\r\n      (e) =>\r\n        e.name.toLowerCase().includes(currentFilter.toLowerCase()) ||\r\n        e.lastName.toLowerCase().includes(currentFilter.toLowerCase()) ||\r\n        e.rut.toLowerCase().includes(currentFilter.toLowerCase())\r\n    )\r\n\r\n    let assistantMap = {}\r\n    selectDay === 'Todos' && currentFilter === ''\r\n      ? (assistantMap = assistants)\r\n      : selectDay === 'Todos'\r\n      ? (assistantMap = data)\r\n      : selectDay !== 'Todos'\r\n      ? (assistantMap = dataDay)\r\n      : (assistantMap = assistants)\r\n\r\n    return assistantMap\r\n  }\r\n)\r\n\r\nexport const filterSchedulerSelector = createSelector(\r\n  (state) => state.allScheduler.scheduler,\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allScheduler.currentFilter,\r\n  (scheduler, assistants, currentFilter) => {\r\n    let assistantsFilt = scheduler.map((data) => {\r\n      const data1 = {\r\n        title: data.title,\r\n        departament: data.departament,\r\n        school: data.school,\r\n        teacher: data.teacher,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        confirmationTurn: data.confirmationTurn,\r\n        assistant: assistants.filter((a) => a._id.includes(data.assistant))[0]\r\n      }\r\n\r\n      return data1\r\n    })\r\n\r\n    let data = assistantsFilt.filter((scheduler) => {\r\n      return (\r\n        scheduler.title.toLowerCase().includes(currentFilter.toLowerCase()) ||\r\n        scheduler.assistant.name\r\n          .toLowerCase()\r\n          .includes(currentFilter.toLowerCase()) ||\r\n        scheduler.assistant.rut\r\n          .toLowerCase()\r\n          .includes(currentFilter.toLowerCase())\r\n      )\r\n    })\r\n\r\n    let schedulerMap = {}\r\n    currentFilter === ''\r\n      ? (schedulerMap = assistantsFilt)\r\n      : (schedulerMap = data)\r\n\r\n    return schedulerMap\r\n  }\r\n)\r\n\r\nexport const filterAssistantSchedulerSelector = createSelector(\r\n  (state) => state.allScheduler.scheduler,\r\n  (state) => state.auth.current,\r\n  (scheduler, current) => {\r\n    let data = scheduler.filter((scheduler) => {\r\n      return scheduler.assistant.includes(current.assistant)\r\n    })\r\n\r\n    return data\r\n  }\r\n)\r\n\r\nexport const filterAssistantsDaySelector = (scheduler) =>\r\n  createSelector(\r\n    (state) => state.allAssistants.currentDay,\r\n    (currentDay) => {\r\n      let data = scheduler.filter((scheduler) => {\r\n        let startDate = format(new Date(scheduler.startDate), 'EEEE dd/MM', {\r\n          locale: es\r\n        })\r\n\r\n        return startDate\r\n          .replace(/^\\w/, (c) => c.toUpperCase())\r\n          .includes(currentDay)\r\n      })\r\n\r\n      return data\r\n    }\r\n  )\r\n\r\nexport const filterAssistantSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant\r\n)\r\n\r\nexport const filterAssistantDaysLengthSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant.daysAvailable?.length\r\n)\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  assistantUpdateRequest,\r\n  fetchSelectedAssistant\r\n} from '../../../redux/actions/assistantActions'\r\nimport { filterAssistantSelector } from '../../../redux/selectors/filter'\r\nimport swal from 'sweetalert'\r\n\r\nconst PaymentDetails = (props) => {\r\n  const dispatch = useDispatch()\r\n  let history = useHistory()\r\n  const { id } = props.match.params\r\n\r\n  const assistant = useSelector(filterAssistantSelector)\r\n\r\n  const { name, lastName, rut, email, fono } = assistant\r\n  const daysAvailable = assistant.daysAvailable\r\n  const address = assistant.address || {}\r\n  const paymentDetails = assistant.paymentDetails || {}\r\n\r\n  const mostrar = () => {\r\n    swal({\r\n      title: 'Información bancaria',\r\n      text: 'Datos guardados correctamente',\r\n      icon: 'success',\r\n      button: 'Aceptar',\r\n      timer: '2000'\r\n    })\r\n  }\r\n  const assistantRequest = {\r\n    name: name,\r\n    lastName: lastName,\r\n    rut: rut,\r\n    email: email,\r\n    fono: fono,\r\n    daysAvailable: daysAvailable,\r\n    address: address,\r\n    paymentDetails: paymentDetails\r\n  }\r\n\r\n  const [payment, setPayment] = useState({\r\n    accountNumber: '',\r\n    accountType: '',\r\n    bankName: ''\r\n  })\r\n\r\n  const [adres, SetAddress] = useState({\r\n    street: '',\r\n    city: '',\r\n    commune: ''\r\n  })\r\n\r\n  const update = (e) => {\r\n    e.preventDefault()\r\n    var list = payment\r\n    var listA = adres\r\n\r\n    assistantRequest.paymentDetails = list\r\n    assistantRequest.address = listA\r\n\r\n    dispatch(assistantUpdateRequest(id, assistantRequest))\r\n    mostrar()\r\n    history.push('/')\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setPayment({\r\n      ...payment,\r\n      [e.target.name]: e.target.value\r\n    })\r\n    SetAddress({\r\n      ...adres,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function asyncFetch() {\r\n      dispatch(fetchSelectedAssistant(id))\r\n    }\r\n    asyncFetch()\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <div className='container mx-auto'>\r\n      <form\r\n        onSubmit={(e) => update(e)}\r\n        className='grid grid-cols-1 lg:grid-cols-2 gap-5 p-3 lg:p-20'\r\n      >\r\n        <h1 className='flex items-center justify-start text-2xl font-bold lg:col-span-2'>\r\n          Dirección Particular\r\n        </h1>\r\n        <div className='flex flex-col gap-3 lg:col-span-2'>\r\n          <label className='uppercase tracking-wide text-black text-xs font-bold'>\r\n            Calle:\r\n          </label>\r\n          <input\r\n            defaultValue={address.street}\r\n            placeholder='Ingresar dirección'\r\n            className=' bg-gray-200 text-black text-xs border border-gray-200 rounded h-10 w-full pl-3'\r\n            onChange={(e) => handleChange(e)}\r\n            name='street'\r\n          />\r\n        </div>\r\n        <div className='flex flex-col gap-3'>\r\n          <label className='uppercase tracking-wide text-black text-xs font-bold'>\r\n            Ciudad:\r\n          </label>\r\n          <input\r\n            defaultValue={address.city}\r\n            placeholder='Ingresar ciudad'\r\n            className=' bg-gray-200 text-black text-xs border border-gray-200 rounded h-10  w-full pl-3'\r\n            onChange={(e) => handleChange(e)}\r\n            name='city'\r\n          />\r\n        </div>\r\n        <div className='flex flex-col gap-3'>\r\n          <label className='uppercase tracking-wide text-black text-xs font-bold'>\r\n            Comuna:\r\n          </label>\r\n          <input\r\n            defaultValue={address.commune}\r\n            placeholder='Ingresar comuna'\r\n            className=' bg-gray-200 text-black text-xs border border-gray-200 rounded h-10  w-full pl-3'\r\n            onChange={(e) => handleChange(e)}\r\n            name='commune'\r\n          />\r\n        </div>\r\n        <h1 className='flex items-center justify-start text-2xl font-bold p-3 lg:col-span-2'>\r\n          Información Bancaria\r\n        </h1>\r\n\r\n        <div className='flex flex-col gap-3 lg:col-span-2'>\r\n          <label className='uppercase tracking-wide text-black text-xs font-bold'>\r\n            Número de cuenta:\r\n          </label>\r\n          <input\r\n            type='number'\r\n            placeholder='Ingresar número de cuenta'\r\n            defaultValue={paymentDetails.accountNumber}\r\n            className=' bg-gray-200 text-black text-xs border border-gray-200 rounded h-10  w-full pl-3'\r\n            onChange={(e) => handleChange(e)}\r\n            name='accountNumber'\r\n          />\r\n        </div>\r\n        <div className='flex flex-col gap-3'>\r\n          <label className='uppercase tracking-wide text-black text-xs font-bold'>\r\n            Tipo de cuenta:\r\n          </label>\r\n          <select\r\n            defaultValue={paymentDetails.accountType}\r\n            className='bg-gray-200 border border-gray-200 text-black text-xs rounded h-10 pl-3 w-full '\r\n            onChange={(e) => handleChange(e)}\r\n            name='accountType'\r\n          >\r\n            <option>Seleccionar Tipo de Cuenta</option>\r\n            <option>CORRIENTE</option>\r\n            <option>VISTA</option>\r\n            <option>CUENTA RUT</option>\r\n            <option>AHORRO</option>\r\n          </select>\r\n        </div>\r\n        <div className='flex flex-col gap-3'>\r\n          <label className='uppercase tracking-wide text-black text-xs font-bold'>\r\n            Banco:\r\n          </label>\r\n          <select\r\n            defaultValue={paymentDetails.bankName}\r\n            className='bg-gray-200 border border-gray-200 text-black text-xs rounded h-10 pl-3 w-full '\r\n            onChange={(e) => handleChange(e)}\r\n            name='bankName'\r\n          >\r\n            <option>Seleccionar Banco</option>\r\n            <option>BANCO BCI</option>\r\n            <option>BANCO BBVA</option>\r\n            <option>BANCO BICE</option>\r\n            <option>BANCO CORP BANCA</option>\r\n            <option>BANCO CONSORCIO</option>\r\n            <option>BANCO COPEUCH</option>\r\n            <option>BANCO ESTADO</option>\r\n            <option>BANCO FALLABELLA</option>\r\n            <option>BANCO ITAU</option>\r\n            <option>BANCO INTERNACIONAL</option>\r\n            <option>BANCO PARIS</option>\r\n            <option>BANCO RIPLEY</option>\r\n            <option>BANCO SANTANDER</option>\r\n            <option>BANCO SCOTIABANK</option>\r\n            <option>BANCO SECURITY</option>\r\n            <option>BANCO CHILE/EDWARDS/CREDICHILE</option>\r\n            <option>BANCO DEL DESARROLLO</option>\r\n            <option>HSBC BANK</option>\r\n            <option>PREPAGO LOS HEROES</option>\r\n            <option>TENPO PREPAGO S.A.</option>\r\n          </select>\r\n        </div>\r\n        <button\r\n          type='submit'\r\n          className='bg-gray-900 text-white font-bold border-b-4 hover:border-b-2 border-gray-500 hover:border-gray-100 lg:col-span-2 rounded-lg h-10'\r\n        >\r\n          Guardar datos\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaymentDetails\r\n"],"sourceRoot":""}