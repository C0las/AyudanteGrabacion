{"version":3,"sources":["components/common/AppointmentContent.js","components/admin/scheduler/Index.js"],"names":["AppointmentContent","data","formatDate","restProps","className","school","departament","startDate","hour","minute","endDate","title","SchedulerContainer","dispatch","useDispatch","useSelector","state","allScheduler","scheduler","schools","console","log","LocationSelector","props","map","type","name","id","defaultChecked","onClick","schoolName","indexOf","filter","nextSchools","push","handleButtonClick","for","DEPARTMENT","resources","fieldName","instances","text","color","locale","firstDayOfWeek","height","currentDate","startDayHour","endDayHour","excludedDays","displayName","timeTableCellComponent","date","getDay","getHours","TimeTableCell","dayScaleCellComponent","DayScaleCell","appointmentContentComponent","flexibleSpaceComponent","FlexibleSpace"],"mappings":"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","file":"static/js/10.75e6eb66.chunk.js","sourcesContent":["import { LocationMarkerIcon, ClockIcon } from '@heroicons/react/solid'\r\n\r\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui'\r\n\r\nconst AppointmentContent = ({ data, formatDate, ...restProps }) => {\r\n  return (\r\n    <Appointments.AppointmentContent\r\n      {...restProps}\r\n      formatDate={formatDate}\r\n      data={data}\r\n    >\r\n      <div className='flex flex-col gap-4 w-full '>\r\n        <div className='flex flex-col'>\r\n          <div className='text-sm text-white font-bold'> {data.school}</div>\r\n          <div className='bg-white w-14 h-2 rounded-lg'></div>\r\n          <div className='text-white text-xs font-semibold mt-3'>\r\n            {data.departament}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className='flex items-center gap-2'>\r\n            <ClockIcon className='w-5 h-5' />\r\n            <div>\r\n              {formatDate(data.startDate, {\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n              })}\r\n            </div>\r\n            <span>-</span>\r\n            <div>\r\n              {formatDate(data.endDate, {\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className='flex text-white items-center gap-2'>\r\n            <LocationMarkerIcon className='w-5 h-5' />\r\n            <span>{data.title}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  )\r\n}\r\n\r\nexport default AppointmentContent\r\n","import * as React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  ViewState,\r\n  EditingState,\r\n  IntegratedEditing\r\n} from '@devexpress/dx-react-scheduler'\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  Appointments,\r\n  DayView,\r\n  ViewSwitcher,\r\n  Resources,\r\n  AppointmentForm\r\n} from '@devexpress/dx-react-scheduler-material-ui'\r\nimport { format } from 'date-fns'\r\nimport AppointmentContent from '../../common/AppointmentContent'\r\nimport { setSchedulers } from '../../../redux/actions/schedulerActions'\r\n\r\nfunction SchedulerContainer() {\r\n  const dispatch = useDispatch()\r\n  const data = useSelector((state) => state.allScheduler.scheduler)\r\n  const schools = useSelector((state) => state.allScheduler.schools)\r\n\r\n  console.log(data)\r\n\r\n  const handleButtonClick = (schoolName, schools) => {\r\n    if (schools.indexOf(schoolName) > -1) {\r\n      return schools.filter((school) => school !== schoolName)\r\n    }\r\n    const nextSchools = [...schools]\r\n    nextSchools.push(schoolName)\r\n    return nextSchools\r\n  }\r\n\r\n  const LocationSelector = (props) => (\r\n    <div className='flex items-center gap-2'>\r\n      {props.schools.map((school) => {\r\n        console.log(school)\r\n        return (\r\n          <>\r\n            <input\r\n              type='checkbox'\r\n              name={school}\r\n              id={school}\r\n              defaultChecked={true}\r\n              onClick={() => {\r\n                dispatch(handleButtonClick(school, schools))\r\n              }}\r\n              key={school}\r\n              className=''\r\n            />\r\n            <label\r\n              for={school}\r\n              className='\r\n              inline-block text-center w-24 text-sm bg-gray-100 rounded cursor-pointer select-none'\r\n            >\r\n              {school}\r\n            </label>\r\n          </>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n\r\n  const FlexibleSpace = ({ ...restProps }) => (\r\n    <Toolbar.FlexibleSpace\r\n      {...restProps}\r\n      className='flex flex-row items-center justify-center m-auto gap-2'\r\n    >\r\n      <LocationSelector schools={schools} />\r\n    </Toolbar.FlexibleSpace>\r\n  )\r\n\r\n  const isRestTime = (date) =>\r\n    date.getDay() === 0 ||\r\n    date.getDay() === 6 ||\r\n    date.getHours() < 9 ||\r\n    date.getHours() >= 18\r\n\r\n  const TimeTableCell = ({ ...restProps }) => {\r\n    const { startDate } = restProps\r\n    if (isRestTime(startDate)) {\r\n      return <WeekView.TimeTableCell {...restProps} className='bg-gray-100' />\r\n    }\r\n    return <WeekView.TimeTableCell {...restProps} />\r\n  }\r\n\r\n  const DayScaleCell = ({ ...restProps }) => {\r\n    const { startDate } = restProps\r\n    if (startDate.getDay() === 0 || startDate.getDay() === 6) {\r\n      return (\r\n        <WeekView.DayScaleCell\r\n          {...restProps}\r\n          className='bg-gray-100 text-red-500'\r\n        />\r\n      )\r\n    }\r\n    return <WeekView.DayScaleCell {...restProps} />\r\n  }\r\n\r\n  const DEPARTMENT = [\r\n    'Preparador Físico',\r\n    'Actuación',\r\n    'Sonido',\r\n    'Administración de Redes y Telecomunicaciones',\r\n    'Audiovisual'\r\n  ]\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: 'departament',\r\n      title: 'Department',\r\n      instances: [\r\n        { id: DEPARTMENT[0], text: DEPARTMENT[0], color: '#36A5C4' },\r\n        { id: DEPARTMENT[1], text: DEPARTMENT[1], color: '#BF0249' },\r\n        { id: DEPARTMENT[2], text: DEPARTMENT[2], color: '#F78B30' },\r\n        { id: DEPARTMENT[3], text: DEPARTMENT[3], color: '#939393' },\r\n        { id: DEPARTMENT[4], text: DEPARTMENT[4], color: '#132CAA' }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='bg-white rounded-l-lg '>\r\n      <Scheduler data={data} locale='es-Cl' firstDayOfWeek={1} height={520}>\r\n        <ViewState currentDate='2021-06-28' />\r\n        <DayView startDayHour={9} endDayHour={19} excludedDays={[0, 6]} />\r\n        <WeekView\r\n          displayName='Semanas'\r\n          startDayHour={7}\r\n          endDayHour={21}\r\n          excludedDays={[0, 6]}\r\n          timeTableCellComponent={TimeTableCell}\r\n          dayScaleCellComponent={DayScaleCell}\r\n        />\r\n\r\n        <Appointments appointmentContentComponent={AppointmentContent} />\r\n        <AppointmentForm />\r\n        <Resources data={resources} />\r\n        <Toolbar flexibleSpaceComponent={FlexibleSpace} />\r\n        <DateNavigator />\r\n        <ViewSwitcher />\r\n      </Scheduler>\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\nconst mapStateToProps = (state) => {\r\n  // Recupera los elementos (Escuelas) a filtrar\r\n  let data = state.allScheduler.data.filter(\r\n    (dataItem) => state.allScheduler.schools.indexOf(dataItem.school) > -1\r\n  )\r\n  // Se captura la cadena del campo de entrada\r\n  const lowerCaseFilter = state.allScheduler.currentFilter.toLowerCase()\r\n  // Filtra los elementos del campo title y school\r\n  data = data.filter(\r\n    (dataItem) =>\r\n      dataItem.title.toLowerCase().includes(lowerCaseFilter) ||\r\n      dataItem.department.toLowerCase().includes(lowerCaseFilter)\r\n  )\r\n  return { ...state.allScheduler, data }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCurrentDateChange: (currentDate) =>\r\n    dispatch(createSchedulerAction('currentDate', currentDate)),\r\n  onCurrentViewNameChange: (currentViewName) =>\r\n    dispatch(createSchedulerAction('currentViewName', currentViewName)),\r\n  onSchoolsChange: (schools) =>\r\n    dispatch(createSchedulerAction('schools', schools))\r\n})\r\n\r\nconst ReduxLocationSelector = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LocationSelector)\r\n*/\r\nexport default SchedulerContainer\r\n"],"sourceRoot":""}