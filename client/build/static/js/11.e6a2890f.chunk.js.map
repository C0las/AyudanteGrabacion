{"version":3,"sources":["redux/selectors/filter.js","components/views/assistente/PaymentDetails.js"],"names":["assistantSelect","state","assistant","filterAssistantsSelector","createSelector","allAssistants","assistants","currentFilter","data","filter","name","toLowerCase","includes","filterAssistantSchedulerSelector","allScheduler","scheduler","auth","current","filterAssistantsDaySelector","currentDay","format","Date","startDate","locale","es","replace","c","toUpperCase","filterAssistantSelector","filterAssistantDaysLengthSelector","daysAvailable","length","PaymentDetails","props","dispatch","useDispatch","history","useHistory","id","match","params","useSelector","lastName","rut","email","fono","address","paymentDetails","assistantRequest","useState","accountNumber","accountType","bankName","payment","setPayment","street","city","commune","adres","SetAddress","update","e","preventDefault","list","listA","assistantUpdateRequest","swal","title","text","icon","button","timer","push","handleChange","target","value","useEffect","a","fetchSelectedAssistant","asyncFetch","className","onSubmit","defaultValue","onChange","type"],"mappings":"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","file":"static/js/11.e6a2890f.chunk.js","sourcesContent":["import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { createSelector } from 'reselect'\r\n\r\nconst assistantSelect = (state) => state.assistant\r\n\r\nexport const filterAssistantsSelector = createSelector(\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allAssistants.currentFilter,\r\n  (assistants, currentFilter) => {\r\n    let data = assistants.filter((assistant) => {\r\n      return assistant.name.toLowerCase().includes(currentFilter.toLowerCase())\r\n    })\r\n\r\n    let assistantMap = {}\r\n    currentFilter === '' ? (assistantMap = assistants) : (assistantMap = data)\r\n\r\n    return assistantMap\r\n  }\r\n)\r\n\r\nexport const filterAssistantSchedulerSelector = createSelector(\r\n  (state) => state.allScheduler.scheduler,\r\n  (state) => state.auth.current,\r\n  (scheduler, current) => {\r\n    let data = scheduler.filter((scheduler) => {\r\n      return scheduler.assistant.includes(current.assistant)\r\n    })\r\n\r\n    return data\r\n  }\r\n)\r\n\r\nexport const filterAssistantsDaySelector = (scheduler) =>\r\n  createSelector(\r\n    (state) => state.allAssistants.currentDay,\r\n    (currentDay) => {\r\n      let data = scheduler.filter((scheduler) => {\r\n        let startDate = format(new Date(scheduler.startDate), 'EEEE', {\r\n          locale: es\r\n        })\r\n\r\n        return startDate\r\n          .replace(/^\\w/, (c) => c.toUpperCase())\r\n          .includes(currentDay)\r\n      })\r\n\r\n      return data\r\n    }\r\n  )\r\n\r\nexport const filterAssistantSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant\r\n)\r\n\r\nexport const filterAssistantDaysLengthSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant.daysAvailable?.length\r\n)\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  assistantUpdateRequest,\r\n  fetchSelectedAssistant,\r\n} from \"../../../redux/actions/assistantActions\";\r\nimport { filterAssistantSelector } from \"../../../redux/selectors/filter\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst PaymentDetails = (props) => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const { id } = props.match.params;\r\n\r\n  const assistant = useSelector(filterAssistantSelector);\r\n\r\n  const { name, lastName, rut, email, fono } = assistant;\r\n  const daysAvailable = assistant.daysAvailable;\r\n  const address = assistant.address;\r\n  const paymentDetails = assistant.paymentDetails || {};\r\n\r\n  const mostrar = () => {\r\n    swal({\r\n      title: \"Información bancaria\",\r\n      text: \"Datos guardados correctamente\",\r\n      icon: \"success\",\r\n      button: \"Aceptar\",\r\n      timer: \"2000\",\r\n    });\r\n  };\r\n  const assistantRequest = {\r\n    name: name,\r\n    lastName: lastName,\r\n    rut: rut,\r\n    email: email,\r\n    fono: fono,\r\n    daysAvailable: daysAvailable,\r\n    address: address,\r\n    paymentDetails: paymentDetails,\r\n  };\r\n\r\n  const [payment, setPayment] = useState({\r\n    accountNumber: \"\",\r\n    accountType: \"\",\r\n    bankName: \"\",\r\n  });\r\n\r\n  const [adres, SetAddress] = useState({\r\n    street: \"\",\r\n    city: \"\",\r\n    commune: \"\",\r\n  });\r\n\r\n  const update = (e) => {\r\n    e.preventDefault();\r\n    var list = payment;\r\n    var listA = adres;\r\n\r\n    assistantRequest.paymentDetails = list;\r\n    assistantRequest.address = listA;\r\n\r\n    dispatch(assistantUpdateRequest(id, assistantRequest));\r\n    mostrar();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPayment({\r\n      ...payment,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    SetAddress({\r\n      ...adres,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function asyncFetch() {\r\n      dispatch(fetchSelectedAssistant(id));\r\n    }\r\n    asyncFetch();\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center gap-10 p-3 lg:p-10\">\r\n      <form\r\n        onSubmit={(e) => update(e)}\r\n        className=\"flex flex-col items-center bg-white shadow-md rounded p-10\"\r\n      >\r\n        <p>\r\n          <h1 className=\"flex items-center justify-start text-2xl font-bold p-3 \">\r\n            Dirección Particular\r\n          </h1>\r\n        </p>\r\n        <div className=\"grid grid-cols-2 gap-5 w-full\">\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"uppercase tracking-wide text-black text-xs font-bold\">\r\n              calle:\r\n            </label>\r\n            <input\r\n              defaultValue={address.street}\r\n              className=\" bg-gray-200 text-black border border-gray-200 rounded h-10  w-full pl-3\"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"street\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"uppercase tracking-wide text-black text-xs font-bold\">\r\n              Ciudad:\r\n            </label>\r\n            <input\r\n              defaultValue={address.city}\r\n              className=\" bg-gray-200 text-black border border-gray-200 rounded h-10  w-full pl-3\"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"city\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"uppercase tracking-wide text-black text-xs font-bold\">\r\n              Ciudad:\r\n            </label>\r\n            <input\r\n              defaultValue={address.commune}\r\n              className=\" bg-gray-200 text-black border border-gray-200 rounded h-10  w-full pl-3\"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"commune\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <p>\r\n          <h1 className=\"flex items-center justify-start text-2xl font-bold p-3\">\r\n            Información Bancaria\r\n          </h1>\r\n        </p>\r\n\r\n        <div className=\"grid grid-cols-2 gap-5\">\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"uppercase tracking-wide text-black text-xs font-bold\">\r\n              Número de cuenta:\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={paymentDetails.accountNumber}\r\n              className=\" bg-gray-200 text-black border border-gray-200 rounded h-10  w-full pl-3\"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"accountNumber\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"uppercase tracking-wide text-black text-xs font-bold\">\r\n              Tipo de cuenta:\r\n            </label>\r\n            <select\r\n              defaultValue={paymentDetails.accountType}\r\n              className=\"bg-gray-200 border border-gray-200 text-black text-xs rounded h-10 pl-3 w-full \"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"accountType\"\r\n            >\r\n              <option>CORRIENTE</option>\r\n              <option>VISTA</option>\r\n              <option>CUENTA RUT</option>\r\n              <option>AHORRO</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            <label className=\"uppercase tracking-wide text-black text-xs font-bold\">\r\n              Banco:\r\n            </label>\r\n            <select\r\n              defaultValue={paymentDetails.bankName}\r\n              className=\"bg-gray-200 border border-gray-200 text-black text-xs rounded h-10 pl-3 w-full \"\r\n              onChange={(e) => handleChange(e)}\r\n              name=\"bankName\"\r\n            >\r\n              <option>BANCO BCI</option>\r\n              <option>BANCO BBVA</option>\r\n              <option>BANCO BICE</option>\r\n              <option>BANCO CORP BANCA</option>\r\n              <option>BANCO CONSORCIO</option>\r\n              <option>BANCO COPEUCH</option>\r\n              <option>BANCO ESTADO</option>\r\n              <option>BANCO FALLABELLA</option>\r\n              <option>BANCO ITAU</option>\r\n              <option>BANCO INTERNACIONAL</option>\r\n              <option>BANCO PARIS</option>\r\n              <option>BANCO RIPLEY</option>\r\n              <option>BANCO SANTANDER</option>\r\n              <option>BANCO SCOTIABANK</option>\r\n              <option>BANCO SECURITY</option>\r\n              <option>BANCO CHILE/EDWARDS/CREDICHILE</option>\r\n              <option>BANCO DEL DESARROLLO</option>\r\n              <option>HSBC BANK</option>\r\n              <option>PREPAGO LOS HEROES</option>\r\n              <option>TENPO PREPAGO S.A.</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-gray-900 text-white font-bold border-b-4 hover:border-b-2 border-gray-500 hover:border-gray-100 rounded-full h-10 mt-6\"\r\n        >\r\n          Guardar datos\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentDetails;\r\n"],"sourceRoot":""}