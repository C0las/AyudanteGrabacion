{"version":3,"sources":["redux/actions/authActions.js","components/common/Loading.js","assets/6.png","components/views/Login.js"],"names":["login","loginAdminData","history","dispatch","a","type","ActionTypes","LOADING_REQUEST","payload","loading","authService","data","success","authValue","current","result","user","isLoggedIn","storePersist","set","LOGIN_SUCCESS","push","FAILED_REQUEST","logout","LOGOUT_SUCCESS","Loading","loadingCircle","start","y","end","loadingCircleTransition","duration","yoyo","Infinity","ease","div","className","variants","transition","staggerChildren","initial","animate","LoginPage","useHistory","useState","username","email","password","datos","setDatos","useDispatch","isLoading","useSelector","selectAuth","handleInput","event","target","name","value","src","logo","alt","onSubmit","preventDefault","required","placeholder","onChange","aria-hidden"],"mappings":"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","file":"static/js/8.598af0f0.chunk.js","sourcesContent":["import { ActionTypes } from '../constants/action-types'\r\nimport * as authService from '../../services/auth'\r\nimport storePersist from '../storePersist'\r\n\r\nexport const login = (loginAdminData, history) => async (dispatch) => {\r\n  dispatch({\r\n    type: ActionTypes.LOADING_REQUEST,\r\n    payload: { loading: true }\r\n  })\r\n  const data = await authService.login(loginAdminData)\r\n\r\n  if (data.success === true) {\r\n    const authValue = {\r\n      current: data.result.user,\r\n      loading: false,\r\n      isLoggedIn: true\r\n    }\r\n\r\n    storePersist.set('auth', authValue)\r\n\r\n    dispatch({\r\n      type: ActionTypes.LOGIN_SUCCESS,\r\n      payload: data.result.user\r\n    })\r\n    history.push('/')\r\n  } else {\r\n    dispatch({\r\n      type: ActionTypes.FAILED_REQUEST,\r\n      payload: data\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = (history) => async (dispatch) => {\r\n  authService.logout()\r\n  dispatch({\r\n    type: ActionTypes.LOGOUT_SUCCESS\r\n  })\r\n  history.push('/login')\r\n}\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nfunction Loading() {\r\n  const loadingContainer = {\r\n    start: { transition: { staggerChildren: 0.2 } },\r\n    end: { transition: { staggerChildren: 0.2 } }\r\n  }\r\n\r\n  const loadingCircle = {\r\n    start: {\r\n      y: '0%'\r\n    },\r\n    end: {\r\n      y: '100%'\r\n    }\r\n  }\r\n\r\n  const loadingCircleTransition = {\r\n    duration: 0.4,\r\n    yoyo: Infinity,\r\n    ease: 'easeInOut'\r\n  }\r\n  return (\r\n    <motion.div\r\n      className='absolute flex flex-row left-0 pl-10 pb-2 items-center justify-center gap-1'\r\n      variants={loadingContainer}\r\n      initial='start'\r\n      animate='end'\r\n    >\r\n      <motion.div\r\n        className='w-2 h-2 bg-white rounded-full'\r\n        variants={loadingCircle}\r\n        transition={loadingCircleTransition}\r\n      ></motion.div>\r\n      <motion.div\r\n        className='w-2 h-2 bg-white rounded-full'\r\n        variants={loadingCircle}\r\n        transition={loadingCircleTransition}\r\n      ></motion.div>\r\n      <motion.div\r\n        className='w-2 h-2 bg-white rounded-full'\r\n        variants={loadingCircle}\r\n        transition={loadingCircleTransition}\r\n      ></motion.div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","export default __webpack_public_path__ + \"static/media/6.27b95fc4.png\";","import { useState } from 'react'\r\nimport { LockClosedIcon } from '@heroicons/react/solid'\r\nimport { login } from '../../redux/actions/authActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAuth } from '../../redux/selectors/auth'\r\nimport logo from '../../assets/6.png'\r\nimport Loading from '../common/Loading'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoginPage = () => {\r\n  let history = useHistory()\r\n\r\n  const [datos, setDatos] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const { loading: isLoading } = useSelector(selectAuth)\r\n\r\n  const handleInput = (event) => {\r\n    setDatos({\r\n      ...datos,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    dispatch(login(datos, history))\r\n  }\r\n\r\n  return (\r\n    <div className='lg:flex flex-row h-screen bg-gradient-to-r from-green-400 to-blue-500 p-10'>\r\n      <div className='lg:flex bg-gradient-to-r from-blue-500 to-blue-800 lg:w-3/5 rounded-l-lg hidden z-0'></div>\r\n      <div className='flex flex-col justify-between bg-white w-full lg:w-3/5 h-full rounded-lg xl:rounded-r-lg p-10 lg:p-20 z-10'>\r\n        <img src={logo} alt='' className='h-20 w-20' />\r\n        <h1 className='text-xl font-bold text-center text-gray-700'>\r\n          ¡Bienvenido de nuevo!\r\n        </h1>\r\n        <div className='flex flex-col gap-5'>\r\n          <form onSubmit={onSubmit} className='flex flex-col  w-full gap-5'>\r\n            <div className='flex flex-col'>\r\n              <label className='text-xs font-medium text-gray-600'>\r\n                Nombre de Usuario\r\n              </label>\r\n              <input\r\n                name='username'\r\n                type='text'\r\n                required\r\n                className='appearance-none rounded-none relative block w-full py-2 pl-2 border-b-2 border-gray-300 placeholder-gray-400 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                placeholder='Ingresa tu usuario'\r\n                onChange={handleInput}\r\n              />\r\n            </div>\r\n            <div className='flex flex-col'>\r\n              <label className='text-xs font-medium text-gray-600'>\r\n                Correo Electrónico\r\n              </label>\r\n              <input\r\n                name='email'\r\n                type='email'\r\n                required\r\n                className='appearance-none rounded-none relative block w-full py-2 pl-2 border-b-2 border-gray-300 placeholder-gray-400 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                placeholder='Ingresa tu correo'\r\n                onChange={handleInput}\r\n              />\r\n            </div>\r\n            <div className='flex flex-col'>\r\n              <label className='text-xs font-medium text-gray-600'>\r\n                Contraseña\r\n              </label>\r\n              <input\r\n                name='password'\r\n                type='password'\r\n                required\r\n                className='appearance-none rounded-none relative block w-full py-2 pl-2 border-b-2 border-gray-300 placeholder-gray-400 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n                placeholder='Ingresa tu contraseña'\r\n                onChange={handleInput}\r\n              />\r\n            </div>\r\n            <div className='flex flex-row justify-between items-center gap-10 lg:gap-28'>\r\n              <button\r\n                type='submit'\r\n                className='group relative w-full h-10 flex flex-row items-center justify-center border border-transparent text-sm font-medium rounded-md text-white bg-blue-800 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\r\n              >\r\n                {isLoading ? (\r\n                  <Loading />\r\n                ) : (\r\n                  <span className='absolute left-0 inset-y-0 flex items-center pl-3'>\r\n                    <LockClosedIcon\r\n                      className='h-5 w-5 text-blue-600 group-hover:text-blue-400'\r\n                      aria-hidden='true'\r\n                    />\r\n                  </span>\r\n                )}\r\n                Iniciar Sesión\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <h1 className='font-light text-xs text-gray-400'>\r\n          version 1.028820212227\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  /*return (\r\n    <>\r\n      <div className='flex flex-col items-center justify-center'>\r\n        <h1>Login</h1>\r\n\r\n        <div className='site-layout-content'>\r\n          <Form\r\n            name='normal_login'\r\n            className='flex flex-col gap-3'\r\n            initialValues={{\r\n              remember: true\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name='username'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Email!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className='site-form-item-icon' />}\r\n                placeholder='admin@demo.com'\r\n                autoComplete='off'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Password!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className='site-form-item-icon' />}\r\n                type='password'\r\n                placeholder='admin123'\r\n                autoComplete='off'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Password!'\r\n                }\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className='site-form-item-icon' />}\r\n                type='text'\r\n                placeholder='example@gmail.com'\r\n                autoComplete='off'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item name='remember' valuePropName='checked' noStyle>\r\n                <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <button\r\n                type='primary'\r\n                htmlType='submit'\r\n                className='w-full border rounded-sm'\r\n                loading={isLoading}\r\n              >\r\n                Log in\r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )*/\r\n}\r\n\r\nexport default LoginPage\r\n"],"sourceRoot":""}