{"version":3,"sources":["redux/selectors/filter.js","components/common/AppointmentContent.js","components/admin/scheduler/Index.js"],"names":["assistantSelect","state","assistant","filterAssistants","createSelector","allAssistants","assistants","currentFilter","data","filter","name","toLowerCase","includes","selectDay","dataDay","daysAvailable","map","avai","day","e","lastName","rut","filterSchedulerSelector","allScheduler","scheduler","auth","current","role","assistantsFilt","_id","title","departament","school","teacher","startDate","endDate","confirmationTurn","a","user","filterAssistantSchedulerSelector","filterAssistantsDaySelector","currentDay","format","Date","locale","es","replace","c","toUpperCase","filterAssistantSelector","filterAssistantDaysLengthSelector","length","AppointmentContent","formatDate","restProps","dispatch","useDispatch","className","onClick","swal","buttons","icon","dangerMode","then","willDelete","timer","scheduleDeleteRequest","hour","minute","indexName","indexOf","indexLastName","substr","SchedulerContainer","useSelector","currentDate","DEPARTMENT","resources","fieldName","instances","id","text","color","firstDayOfWeek","height","onCurrentDateChange","setCurrentDate","defaultCurrentViewName","displayName","startDayHour","endDayHour","excludedDays","appointmentContentComponent","shadePreviousCells","flexibleSpaceComponent","FlexibleSpace"],"mappings":"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","file":"static/js/7.c6b6a857.chunk.js","sourcesContent":["import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\nimport { createSelector } from 'reselect'\r\n\r\nconst assistantSelect = (state) => state.assistant\r\n\r\nexport const filterAssistantsSelector = createSelector(\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allAssistants.currentFilter,\r\n  (assistants, currentFilter) => {\r\n    let data = assistants.filter((assistant) => {\r\n      return assistant?.name.toLowerCase().includes(currentFilter.toLowerCase())\r\n    })\r\n\r\n    let assistantMap = {}\r\n    currentFilter === '' ? (assistantMap = assistants) : (assistantMap = data)\r\n\r\n    return assistantMap\r\n  }\r\n)\r\n\r\nexport const filterAssistants = createSelector(\r\n  (state) => state.allAssistants.assistants,\r\n  (state) => state.allAssistants.selectDay,\r\n  (state) => state.allAssistants.currentFilter,\r\n  (assistants, selectDay, currentFilter) => {\r\n    let dataDay = assistants.filter((assistant) => {\r\n      return assistant.daysAvailable\r\n        .map((avai) => avai.day[0]?.toLowerCase())\r\n        .includes(selectDay.toLowerCase())\r\n    })\r\n\r\n    let data = assistants.filter(\r\n      (e) =>\r\n        e.name.toLowerCase().includes(currentFilter.toLowerCase()) ||\r\n        e.lastName.toLowerCase().includes(currentFilter.toLowerCase()) ||\r\n        e.rut.toLowerCase().includes(currentFilter.toLowerCase())\r\n    )\r\n\r\n    let assistantMap = {}\r\n    selectDay === 'Todos' && currentFilter === ''\r\n      ? (assistantMap = assistants)\r\n      : selectDay === 'Todos'\r\n      ? (assistantMap = data)\r\n      : selectDay !== 'Todos'\r\n      ? (assistantMap = dataDay)\r\n      : (assistantMap = assistants)\r\n\r\n    return assistantMap\r\n  }\r\n)\r\n\r\nexport const filterSchedulerSelector = createSelector(\r\n  (state) => state.allScheduler?.scheduler,\r\n  (state) => state.allAssistants?.assistants,\r\n  (state) => state.allScheduler?.currentFilter,\r\n  (state) => state.auth.current?.role[0].name,\r\n  (scheduler, assistants, currentFilter, auth) => {\r\n    let assistantsFilt = scheduler.map((data) => {\r\n      const data1 = {\r\n        _id: data._id,\r\n        title: data.title,\r\n        departament: data.departament,\r\n        school: data.school,\r\n        teacher: data.teacher,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        confirmationTurn: data.confirmationTurn,\r\n        assistant: assistants.filter((a) => a._id.includes(data.assistant))[0],\r\n        user: auth\r\n      }\r\n\r\n      return data1\r\n    })\r\n\r\n    let data = assistantsFilt.filter((scheduler) => {\r\n      return (\r\n        scheduler.title.toLowerCase().includes(currentFilter.toLowerCase()) ||\r\n        scheduler.assistant.name\r\n          .toLowerCase()\r\n          .includes(currentFilter.toLowerCase()) ||\r\n        scheduler.assistant.rut\r\n          .toLowerCase()\r\n          .includes(currentFilter.toLowerCase())\r\n      )\r\n    })\r\n\r\n    let schedulerMap = {}\r\n    currentFilter === ''\r\n      ? (schedulerMap = assistantsFilt)\r\n      : (schedulerMap = data)\r\n\r\n    return schedulerMap\r\n  }\r\n)\r\n\r\nexport const filterAssistantSchedulerSelector = createSelector(\r\n  (state) => state.allScheduler.scheduler,\r\n  (state) => state.auth.current,\r\n  (scheduler, current) => {\r\n    let data = scheduler.filter((scheduler) => {\r\n      return scheduler.assistant.includes(current.assistant)\r\n    })\r\n    return data\r\n  }\r\n)\r\n\r\nexport const filterAssistantsDaySelector = (scheduler) =>\r\n  createSelector(\r\n    (state) => state.allAssistants.currentDay,\r\n    (currentDay) => {\r\n      let data = scheduler.filter((scheduler) => {\r\n        let startDate = format(new Date(scheduler.startDate), 'EEEE dd/MM', {\r\n          locale: es\r\n        })\r\n\r\n        return startDate\r\n          .replace(/^\\w/, (c) => c.toUpperCase())\r\n          .includes(currentDay)\r\n      })\r\n\r\n      return data\r\n    }\r\n  )\r\n\r\nexport const filterAssistantSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant\r\n)\r\n\r\nexport const filterAssistantDaysLengthSelector = createSelector(\r\n  [assistantSelect],\r\n  (assistant) => assistant.assistant.daysAvailable?.length\r\n)\r\n","import { useDispatch } from 'react-redux'\r\nimport {\r\n  LocationMarkerIcon,\r\n  ClockIcon,\r\n  UserIcon,\r\n  TrashIcon\r\n} from '@heroicons/react/solid'\r\n\r\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui'\r\nimport swal from 'sweetalert'\r\nimport { scheduleDeleteRequest } from '../../redux/actions/schedulerActions'\r\n\r\nconst AppointmentContent = ({ data, formatDate, ...restProps }) => {\r\n  const dispatch = useDispatch()\r\n  const handleClick = () => {\r\n    swal('¿Estas seguro de eliminar este turno?', {\r\n      buttons: ['No', 'Si'],\r\n      icon: 'warning',\r\n      dangerMode: true\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        swal('¡El turno ha sido eliminado correctamente!', {\r\n          icon: 'success',\r\n          buttons: false,\r\n          timer: 1000\r\n        }).then(() => dispatch(scheduleDeleteRequest(data._id)))\r\n      }\r\n    })\r\n  }\r\n  const name = () => {\r\n    const indexName = data.assistant.name.indexOf(' ')\r\n    const indexLastName = data.assistant.lastName.indexOf(' ')\r\n\r\n    var name = data.assistant.name.substr(0, indexName)\r\n    var lastName = data.assistant.lastName.substr(0, indexLastName)\r\n\r\n    if (name === '') name = data.assistant.name\r\n    if (lastName === '') lastName = data.assistant.lastName\r\n\r\n    return name + ' ' + lastName\r\n  }\r\n\r\n  return (\r\n    <Appointments.AppointmentContent\r\n      {...restProps}\r\n      formatDate={formatDate}\r\n      data={data}\r\n    >\r\n      <div className='flex flex-col gap-3 w-full'>\r\n        {data.user === 'admin' && (\r\n          <div className='flex flex-row w-full items-center justify-end'>\r\n            <button\r\n              onClick={() => handleClick()}\r\n              className='text-white hover:text-red-500'\r\n            >\r\n              <TrashIcon className='h-4 w-4' />\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className='flex flex-row'>\r\n          <div className='flex flex-col'>\r\n            <div className='text-sm text-white font-bold'> {data.title}</div>\r\n\r\n            <div className='bg-white w-14 h-2 rounded-lg'></div>\r\n            <div className='text-white text-xs font-semibold mt-3'>\r\n              {data.departament}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='flex flex-col gap-1'>\r\n          <div className='flex items-center gap-2'>\r\n            <ClockIcon className='w-4 h-4' />\r\n            <h1 className='text-xs'>\r\n              {formatDate(data.startDate, {\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n              })}\r\n            </h1>\r\n            <span>-</span>\r\n            <h1 className='text-xs'>\r\n              {formatDate(data.endDate, {\r\n                hour: 'numeric',\r\n                minute: 'numeric'\r\n              })}\r\n            </h1>\r\n          </div>\r\n          {/*<div className='flex text-white items-center gap-2'>\r\n            <LocationMarkerIcon className='w-4 h-4' />\r\n            <span className='text-xs'>{data.title}</span>\r\n            </div>*/}\r\n\r\n          {data.assistant.name && (\r\n            <div className='flex flex-row text-white items-center gap-2'>\r\n              <UserIcon className='w-4 h-4' />\r\n              <span className='text-xs'>{name()}</span>\r\n            </div>\r\n          )}\r\n\r\n          {data.confirmationTurn === 'Pendiente' && (\r\n            <div className='flex items-center justify-center bg-yellow-400 rounded-lg w-20'>\r\n              Pendiente\r\n            </div>\r\n          )}\r\n\r\n          {data.confirmationTurn === 'Rechazado' && (\r\n            <div className='flex items-center justify-center bg-red-600 rounded-lg w-20'>\r\n              Rechazado\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Appointments.AppointmentContent>\r\n  )\r\n}\r\n\r\nexport default AppointmentContent\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { ViewState } from '@devexpress/dx-react-scheduler'\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Toolbar,\r\n  DateNavigator,\r\n  Appointments,\r\n  DayView,\r\n  ViewSwitcher,\r\n  Resources,\r\n  AppointmentForm,\r\n  CurrentTimeIndicator\r\n} from '@devexpress/dx-react-scheduler-material-ui'\r\nimport AppointmentContent from '../../common/AppointmentContent'\r\nimport { setCurrentDate } from '../../../redux/actions/schedulerActions'\r\nimport { filterSchedulerSelector } from '../../../redux/selectors/filter'\r\n\r\nfunction SchedulerContainer() {\r\n  const dispatch = useDispatch()\r\n  let data = useSelector(filterSchedulerSelector)\r\n  const currentDate = useSelector((state) => state.allScheduler.currentDate)\r\n  //const datee = useSelector(hourWork1)\r\n\r\n  /*const test = () => {\r\n    const hour = datee.map((e) => e.hour)\r\n    const minute = datee.map((e) => e.minute)\r\n\r\n    let horas = hour.reduce((a, b) => a + b, 0)\r\n    let minutos = minute.reduce((a, b) => a + b, 0)\r\n\r\n    if (minutos >= 60) {\r\n      // Divide minutes by 60 and add result to hours\r\n      horas += Math.floor(minutos / 60)\r\n      // Add remainder of totalM / 60 to minutes\r\n      minutos = minutos % 60\r\n    }\r\n\r\n    return horas + 'h' + minutos\r\n  }*/\r\n\r\n  const FlexibleSpace = ({ ...restProps }) => (\r\n    <Toolbar.FlexibleSpace\r\n      {...restProps}\r\n      className='flex flex-row items-center justify-center m-auto gap-2'\r\n    >\r\n      {/*<LocationSelector schools={schools} />*/}\r\n    </Toolbar.FlexibleSpace>\r\n  )\r\n\r\n  const DEPARTMENT = [\r\n    'Preparador Físico',\r\n    'Actuación',\r\n    'Sonido y Audiovisual',\r\n    'Redes y Telecomunicaciones'\r\n  ]\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: 'departament',\r\n      title: 'Department',\r\n      instances: [\r\n        { id: DEPARTMENT[0], text: DEPARTMENT[0], color: '#36A5C4' },\r\n        { id: DEPARTMENT[1], text: DEPARTMENT[1], color: '#BF0249' },\r\n        { id: DEPARTMENT[2], text: DEPARTMENT[2], color: '#F78B30' },\r\n        { id: DEPARTMENT[3], text: DEPARTMENT[3], color: '#939393' }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Scheduler data={data} locale='es-Cl' firstDayOfWeek={1} height={540}>\r\n      <ViewState\r\n        currentDate={currentDate}\r\n        onCurrentDateChange={(currentDate) =>\r\n          dispatch(setCurrentDate(currentDate))\r\n        }\r\n        defaultCurrentViewName='Week'\r\n      />\r\n\r\n      <DayView\r\n        displayName='Dias'\r\n        startDayHour={8}\r\n        endDayHour={21}\r\n        excludedDays={[0, 6]}\r\n      />\r\n      <WeekView\r\n        displayName='Semanas'\r\n        startDayHour={8}\r\n        endDayHour={21}\r\n        excludedDays={[0, 6]}\r\n      />\r\n\r\n      <Appointments appointmentContentComponent={AppointmentContent} />\r\n\r\n      <CurrentTimeIndicator shadePreviousCells={false} />\r\n      <Resources data={resources} />\r\n      <Toolbar flexibleSpaceComponent={FlexibleSpace} />\r\n      <DateNavigator />\r\n      <ViewSwitcher />\r\n    </Scheduler>\r\n  )\r\n}\r\n\r\nexport default SchedulerContainer\r\n"],"sourceRoot":""}